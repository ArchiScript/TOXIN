{"version":3,"file":"85.9cea6ece8fd74e2ccd34.js","mappings":"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","sources":["webpack://toxin/./node_modules/chart.js/auto/auto.js","webpack://toxin/./node_modules/@kurkle/color/dist/color.esm.js","webpack://toxin/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://toxin/./node_modules/chart.js/dist/chart.js"],"sourcesContent":["import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.3.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.3.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.3.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getDatasetArea(meta) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: xScale.left,\n            right: xScale.right,\n            top: yScale.top,\n            bottom: yScale.bottom\n        };\n    }\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta) || this.chartArea;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n"],"names":["round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","r","g","hueValue","calln","Array","isArray","map","hsl2rgb","hue","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","Object","assign","fromObject","input","length","functionParse","str","charAt","m","exec","rgbParse","p1","p2","hwb2rgb","hsv2rgb","hueParse","Color","constructor","type","ret","len","unpacked","keys","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","nameParse","this","_rgb","_valid","valid","obj","rgbString","undefined","hexString","isShort","alpha","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","useOffsetPos","shadowRoot","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","rtl","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","_boundSegments","segments","sub","readStyle","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","styleChanged","prevStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","aspectRatio","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","controllers","__proto__","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","LineController","_dataset","_datasetIndex","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestCartesianItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","fullSize","setBoxDims","placeBoxes","userPadding","placed","stackWeight","layouts","addBox","_layers","z","removeBox","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","buildStacks","setLayoutDims","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","bbWidth","bbHeight","margins","containerSize","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","isConnected","Element","tooltipPosition","hasValue","final","newTicks","majorStart","majorEnd","ceil","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_maxLength","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","tickOpts","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","determinedMaxTicks","_tickSize","maxScale","maxChart","determineMaxTicks","ticksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStart","outerEnd","innerStart","innerEnd","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","parseBorderRadius$1","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","ArcElement","fullCircles","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","LineElement","_path","_points","_segments","_pointsUpdated","segmentOptions","findStartAndEnd","chartContext","baseStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","doSplitByStyles","splitByStyles","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","segmentMethod","path","strokePathWithCache","strokePathDirect","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","outer","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","boundingRects","addRectPath","mouseX","mouseY","inXRange","inYRange","PointElement","hoverRadius","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","colorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","getColorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","decimated","getStartAndCountOfVisiblePointsSimplified","threshold","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_drawfill","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","_getLabelForValue","relativeLabelSize","minSpacing","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","generateTicks$1","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","LogarithmicScale","_zero","minExp","exp","startExp","lastTick","generateTicks","getTickBackdropHeight","determineLimits","updateLimits","limits","hLimits","vLimits","createPointLabelItem","itemOpts","outerDistance","drawingArea","extra","additionalAngle","pointLabelPosition","getPointPosition","yForAngle","getTextAlignForAngle","isNotOverlapped","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","centerPointLabels","_pointLabels","_pointLabelItems","valueCount","pointLabelOpts","getPointLabelContext","plFont","setCenterPoint","buildPointLabelItems","fitWithPointLabels","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","CategoryScale","_addedLabels","added","addedLabels","addIfString","lastIndexOf","findOrAddLabel","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"sourceRoot":""}